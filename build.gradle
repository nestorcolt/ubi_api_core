plugins {
    id 'war'
    id "fish.payara.micro-gradle-plugin" version "1.0.4"
    id 'java'
}

group "com.ubi.hotel.apiGradle2"
version "0.1.0"

repositories {
    mavenCentral()
}

payaraMicro {
    deployWar = true
    javaCommandLineOptions = [Ddb: 'localhost', ea: true]
}

dependencies {
    providedCompile 'javax:javaee-web-api:8.0'
    implementation 'org.eclipse.microprofile:microprofile:3.3'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

    // jpa
    implementation 'org.eclipse.persistence:eclipselink:2.7.4'
    implementation 'javax.persistence:javax.persistence-api:2.2'

    // https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.2.6'

    // https://mvnrepository.com/artifact/jakarta.xml.bind/jakarta.xml.bind-api
    implementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '2.3.3'

    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-impl
    implementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.1'

    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.20'

    // For unit test suite
    implementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    implementation 'org.jboss.arquillian.junit5:arquillian-junit5-container:1.7.0.Alpha10'
    implementation 'org.glassfish.jersey.core:jersey-client:2.34'
    implementation 'org.jboss.arquillian.container:arquillian-weld-ee-embedded-1.1:1.0.0.Final'
    implementation 'org.jboss.weld:weld-core:2.4.8.Final'
    implementation 'org.slf4j:slf4j-simple:2.0.0-alpha4'
}


test {
    useJUnitPlatform()
    testLogging.showStandardStreams(true)
    testLogging {
        events "passed", "skipped", "failed"
    }
}

war {
    manifest {
        attributes(
                "Manifest-Version": "1.0",
                'Created-By': "Gradle ${gradle.gradleVersion}",
                'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}",
                'Built-By': System.properties['user.name'],
                'Built-Date': LocalDateTime.now()
        )
    }

    archiveFileName = 'ROOT.war'
}
